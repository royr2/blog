{"frames":[{"func":"bayesOpt(FUN = obj_func, bounds = bounds, initPoints = length(bounds) + \n    2, iters.n = 10, verbose = 0)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"addIterations(optObj, otherHalting = otherHalting, iters.n = iters.n, \n    iters.k = iters.k, parallel = parallel, plotProgress = plotProgress, \n    errorHandling = errorHandling, saveFile = saveFile, verbose = verbose, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"system.time(LocalOptims <- getLocalOptimums(optObj, bounds = bounds, \n    parallel = parallel, verbose = verbose))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"getLocalOptimums(optObj, bounds = bounds, parallel = parallel, \n    verbose = verbose)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"foreach(notI = 1:nrow(localTryMM), .combine = \"rbind\", .inorder = TRUE, \n    .errorhandling = \"pass\", .packages = c(\"DiceKriging\", \"stats\"), \n    .multicombine = TRUE, .verbose = FALSE, .export = c(\"calcAcq\")) %op% \n    { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"e$fun(obj, substitute(ex), parent.frame(), e$data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    repeat {\n        args <- nextElem(it)\n        if (obj$verbose) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(eval(xpr, envir = envir), error = function(e) e)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(xpr, envir = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(xpr, envir = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"optim(par = localTryMM[notI, ], fn = calcAcq, scoreGP = optObj$GauProList$scoreGP, \n    timeGP = optObj$GauProList$timeGP, acq = acq, y_max = 1, \n    kappa = kappa, eps = eps, method = \"L-BFGS-B\", lower = rep(0, \n        length(localTryMM)), upper = rep(1, length(localTryMM)),  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (par) \nfn(par, ...))(c(eta = 0.202440762163692, max_depth = 0.555555555555556, \nmin_child_weight = 0.671758028530921, subsample = 0.60157800621366, \nlambda = 0.00763576837360031, alpha = 0.275181975485084))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fn(par, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict(scoreGP, p, type = \"SK\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict.km(scoreGP, p, type = \"SK\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"is(object@covariance, \"covUser\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stopifnot(length(class2) == 1L)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"StopIteration"}