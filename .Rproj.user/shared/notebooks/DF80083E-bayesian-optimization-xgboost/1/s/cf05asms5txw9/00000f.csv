"0","#| label: final-model"
"0",""
"0","# Combine best params with base params"
"0","opt_params <- append("
"0","  list(booster = ""gbtree"", "
"0","       objective = ""reg:squarederror"", "
"0","       eval_metric = ""mae""), "
"0","  best_params"
"0",")"
"0",""
"0","# Run cross-validation to determine optimal number of rounds"
"0","xgbcv <- xgb.cv("
"0","  params = opt_params,"
"0","  data = X,"
"0","  label = y,"
"0","  nround = 100,"
"0","  folds = folds,"
"0","  prediction = TRUE,"
"0","  early_stopping_rounds = 5,"
"0","  verbose = 0,"
"0","  maximize = FALSE"
"0",")"
"0",""
"0","# Get optimal number of rounds"
"0","nrounds = xgbcv$best_iteration"
"0",""
"0","# Fit the final XGBoost model"
"0","mdl <- xgboost("
"0","  data = X, "
"0","  label = y, "
"0","  params = opt_params, "
"0","  maximize = FALSE, "
"0","  early_stopping_rounds = 5, "
"0","  nrounds = nrounds, "
"0","  verbose = 0"
"0",")"
"0",""
"0","# Make predictions on the test set"
"0","actuals <- test_df$cmedv"
"0","predicted <- test_df %>%"
"0","  select_at(mdl$feature_names) %>%"
"0","  as.matrix() %>%"
"0","  predict(mdl, newdata = .)"
"0",""
"0","# Evaluate performance using Mean Absolute Percentage Error (MAPE)"
"0","mape <- mean(abs(actuals - predicted)/actuals)"
"0","cat(""MAPE on test set:"", mape)"
"1","MAPE on test set:"
"1"," "
"1","0.009992194"
