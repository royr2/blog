"0","#| label: objective-function"
"0",""
"0","# Our objective function takes hyperparameters as inputs"
"0","obj_func <- function(eta, max_depth, min_child_weight, subsample, lambda, alpha) {"
"0","  "
"0","  param <- list("
"0","    # Learning parameters"
"0","    eta = eta,                       # Learning rate"
"0","    max_depth = max_depth,           # Tree depth"
"0","    min_child_weight = min_child_weight, # Min observations per node"
"0","    subsample = subsample,           # Data subsampling"
"0","    lambda = lambda,                 # L2 regularization"
"0","    alpha = alpha,                   # L1 regularization"
"0","    "
"0","    booster = ""gbtree"",             # Use tree model"
"0","    objective = ""reg:squarederror"",  # Regression task"
"0","    eval_metric = ""mape""            # Mean Absolute Percentage Error"
"0","  )"
"0","  "
"0","  xgbcv <- xgb.cv(params = param,"
"0","                  data = X,"
"0","                  label = y,"
"0","                  nround = 50,"
"0","                  folds = folds,"
"0","                  prediction = TRUE,"
"0","                  early_stopping_rounds = 5,"
"0","                  verbose = 0,"
"0","                  maximize = FALSE)"
"0","  "
"0","  lst <- list("
"0","    # First argument must be named as ""Score"""
"0","    # Function finds maxima so inverting the output"
"0","    Score = -min(xgbcv$evaluation_log$test_mape_mean),"
"0","    "
"0","    # Get number of trees for the best performing model"
"0","    nrounds = xgbcv$best_iteration"
"0","  )"
"0","  "
"0","  return(lst)"
"0","}"
"0",""
"0","# Define the search space for each parameter"
"0","bounds <- list("
"0","  eta = c(0.001, 0.2),             # Learning rate range"
"0","  max_depth = c(1L, 10L),           # Tree depth range"
"0","  min_child_weight = c(1, 50),      # Min observations range"
"0","  subsample = c(0.1, 1),            # Subsampling range"
"0","  lambda = c(1, 10),                # L2 regularization range"
"0","  alpha = c(1, 10)                  # L1 regularization range"
"0",")"
