"0","gains_table <- function(act, pred, increasing = T, nBins = 10){"
"0","  "
"0","  q <- quantile(pred, probs = seq(0, 1, length.out = nBins + 1))"
"0","  bins <- cut(pred, breaks = q, include.lowest = T, right = T, ordered_result = T)"
"0","  "
"0","  df <- data.frame(act, pred, bins)"
"0","  "
"0","  df %>% "
"0","    "
"0","    group_by(bins) %>% "
"0","    summarise(total = n(), "
"0","              events = sum(act == 1), "
"0","              non_events = sum(act == 0)) %>% "
"0","    mutate(event_rate = percent(events / total, 0.1, 100)) %>% "
"0","    "
"0","    {if(increasing == TRUE){"
"0","      arrange(., bins)"
"0","    }else{"
"0","      arrange(., desc(bins))"
"0","    }} %>% "
"0","    "
"0","    mutate(pop_pct = percent(total/sum(total), 0.1, 100), "
"0","           c.events_pct = cumsum(events) / sum(events),"
"0","           c.non_events_pct = cumsum(non_events) / sum(non_events), "
"0","           ks = round(abs(c.events_pct - c.non_events_pct), 2), "
"0","           cap_rate = percent(cumsum(events)/sum(events), 1, 100), "
"0","           c_event_rate = percent(cumsum(events)/cumsum(total), 0.1, 100), "
"0","           c.events_pct = percent(c.events_pct, 0.1, 100),"
"0","           c.non_events_pct = percent(c.non_events_pct, 0.1, 100))"
"0","}"
