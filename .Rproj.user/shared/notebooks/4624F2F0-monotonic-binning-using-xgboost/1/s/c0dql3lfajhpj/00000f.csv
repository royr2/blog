"0","create_bins <- function(var, outcome, max_depth = 10, plot = TRUE){"
"0","  # Determine relationship direction automatically"
"0","  corr <- cor(var, outcome, method = ""spearman"")"
"0","  direction <- ifelse(corr > 0, 1, -1)  # 1 for positive, -1 for negative correlation"
"0","  "
"0","  # Build XGBoost model with appropriate monotonicity constraint"
"0","  mdl <- xgboost("
"0","    verbose = 0,"
"0","    data = as.matrix(var),"
"0","    label = outcome,"
"0","    nrounds = 100,  # Single round is sufficient for binning"
"0","    params = list(objective = ""binary:logistic"","
"0","                  monotone_constraints = direction,  # Apply constraint based on correlation"
"0","                  max_depth = max_depth))  # Control tree complexity"
"0","  "
"0","  # Extract and return split points"
"0","  splits <- xgb.model.dt.tree(model = mdl)"
"0","  cuts <- c(-Inf, sort(unique(splits$Split)), Inf)  # Include boundaries for complete coverage"
"0","  "
"0","  # Optionally visualize the bins"
"0","  if(plot) {"
"0","    data.frame(target = outcome,"
"0","               buckets = cut(var, "
"0","                            breaks = cuts, "
"0","                            include.lowest = TRUE, "
"0","                            right = TRUE)) %>% "
"0","      group_by(buckets) %>%"
"0","      summarise(total = n(),"
"0","                events = sum(target == 1)) %>%"
"0","      mutate(pct = events/total) %>%"
"0","      ggplot(aes(x = buckets, y = pct)) + "
"0","      geom_col() + "
"0","      theme_minimal() + "
"0","      labs(x = ""Bins"", "
"0","           y = ""Default rate"","
"0","           title = ""Monotonic Bins"")"
"0","  }"
"0","  "
"0","  return(cuts)  # Return the bin boundaries"
"0","}"
