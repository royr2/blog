{"frames":[{"func":"getSymbols(Symbols = nms, verbose = FALSE, auto.assign = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(paste(\"getSymbols.\", symbol.source, sep = \"\"), list(Symbols = current.symbols, \n    env = env, verbose = verbose, warnings = warnings, auto.assign = auto.assign, \n    ..., .has1sym. = .has1sym.))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"getSymbols.yahoo(Symbols = \"AXISBANK.NS\", env = <environment>, \n    verbose = FALSE, warnings = TRUE, auto.assign = FALSE, .has1sym. = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try({\n    return.class <- getSymbolLookup()[[Symbols[[i]]]]$return.class\n    return.class <- ifelse(is.null(return.class), default.return.class, \n        return.class) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"jsonlite::fromJSON(conn)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"parse_and_simplify(txt = txt, simplifyVector = simplifyVector, \n    simplifyDataFrame = simplifyDataFrame, simplifyMatrix = simplifyMatrix, \n    flatten = flatten, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"parseJSON(txt, bigint_as_char)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"parse_con(txt, bigint_as_char)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"open(con, \"rb\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"open.connection(con, \"rb\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error : object 'pbest' not found\n"}