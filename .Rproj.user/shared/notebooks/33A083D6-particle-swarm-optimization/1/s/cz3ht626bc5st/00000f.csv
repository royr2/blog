"0","# Get the number of stocks in our dataset"
"0","n_stocks <- ncol(returns_df)"
"0",""
"0","# Run the PSO optimization for the full portfolio"
"0","opt <- psoptim("
"0","  # Initial particle positions (starting with equal weights)"
"0","  par = rep(0, n_stocks),"
"0","  "
"0","  # Objective function to minimize"
"0","  fn = obj_func,"
"0","  "
"0","  # Pass the expected returns and covariance matrix"
"0","  ret_vec = mean_returns, "
"0","  cov_mat = cov_mat,"
"0","  "
"0","  # Set constraint parameters"
"0","  lambda1 = 10,  # Weight for full investment constraint"
"0","  risk_av = 1000,  # Higher risk aversion for a more conservative portfolio"
"0","  "
"0","  # Set bounds for weights (no short selling allowed)"
"0","  lower = rep(0, n_stocks),"
"0","  upper = rep(1, n_stocks),"
"0","  "
"0","  # Configure the PSO algorithm"
"0","  control = list("
"0","    maxit = 200,          # Maximum iterations"
"0","    s = 100,               # Swarm size (number of particles)"
"0","    maxit.stagnate = 500   # Stop if no improvement after this many iterations"
"0","  )"
"0",")"
"0",""
"0","# Calculate and display the expected return of the optimized portfolio"
"0","paste(""Portfolio returns:"", round(opt$par %*% mean_returns, 5))"
"1","[1]"
"1"," ""Portfolio returns: 6e-04"""
"1","
"
"0","# Calculate and display the standard deviation (risk) of the optimized portfolio"
"0","paste(""Portfolio Std dev:"", round(sqrt(opt$par %*% cov_mat %*% opt$par), 5))"
"1","[1]"
"1"," ""Portfolio Std dev: 0.009"""
"1","
"
"0","# Verify that the weights sum to approximately 1 (full investment constraint)"
"0","sum(opt$par)"
"1","[1]"
"1"," 0.9915413"
"1","
"
