"0","# Create a fine grid of points covering the feasible region (all possible weight combinations)"
"0","grid <- expand.grid(x = seq(0, 1, by = 0.01),  # First asset weight from 0 to 1"
"0","                    y = seq(0, 1, by = 0.01))   # Second asset weight from 0 to 1"
"0",""
"0","# Evaluate the objective function at each grid point to create the landscape"
"0","grid$obj <- apply(grid, 1, obj_func, "
"0","                  ret_vec = mean_returns_small, "
"0","                  cov_mat = cov_mat_small, "
"0","                  lambda1 = 10, risk_av = 100)"
"0",""
"0","# Create an interactive 3D plot showing both the objective function surface"
"0","# and the particle trajectories throughout the optimization"
"0","p <- plot_ly() %>% "
"0","  # Add the objective function surface as a mesh"
"0","  add_mesh(data = grid, x = ~x, y = ~y, z = ~obj, "
"0","           inherit = FALSE, color = ""red"") %>% "
"0","  "
"0","  # Add particles as markers, colored by iteration to show progression"
"0","  add_markers(data = out$X, x = ~X1, y = ~X2, z = ~obj, "
"0","              color = ~ iter, inherit = FALSE, "
"0","              marker = list(size = 2))"
"0","  "
"0","# Save the interactive plot as an HTML file"
"0","htmlwidgets::saveWidget(p, ""plotly.html"") "
"2","Warning: minimal value for n is 3, returning requested palette with 3 different levels
"
"2","Warning: minimal value for n is 3, returning requested palette with 3 different levels
"
"2","Registered S3 method overwritten by 'rmarkdown':
  method         from
  print.paged_df     
"
