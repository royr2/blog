{
  "hash": "680fb11341059a433bc7299fdc4cf867",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing COVID-19 Data with Leaflet in R\"\ndate: \"2025-03-30\"\ncategories: [R, Geospatial, Visualization]\nimage: \"../posts/visualising_covid_data_leaflet/chart1-1.png\"\nexecute:\n  echo: true\n  warning: false\n  message: false\n  eval: false\n---\n\n\n\n# Interactive Geospatial Visualization with Leaflet\n\n`Leaflet` is a JavaScript library for interactive maps that has excellent R bindings. It's a powerful tool for visualizing data with a spatial dimension. This post demonstrates how to use the `leaflet` package in R to create interactive visualizations of COVID-19 data.\n\n## Required Libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(dplyr)\nlibrary(leaflet)\n```\n:::\n\n\n\n## Sample Dataset\n\nFor this demonstration, we'll use a summarized version of the COVID-19 Data Repository hosted by [Johns Hopkins University](https://github.com/CSSEGISandData/COVID-19).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load COVID-19 data\ndf <- read.csv(\"https://raw.githubusercontent.com/royr2/blog/main/download/covid_data.csv\")\n```\n:::\n\n\n\n## Visualizing Confirmed Cases Across Countries\n\nLet's create a map visualization showing how the cumulative case load is distributed across different countries as of a specific date:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplt <- df %>% \n    filter(date == \"2021-09-01\") %>% \n    \n    # Circle radius - scaled for visual effect\n    mutate(rad = sqrt(confirmed/max(confirmed)) * 100) %>% \n    \n    # Create leaflet map\n    leaflet(options = leafletOptions(minZoom = 2, maxZoom = 6)) %>% \n    \n    # Base map layer\n    addProviderTiles(providers$Stamen.Toner,\n                     options = providerTileOptions(opacity = 0.6)) %>%\n    \n    # Add circle markers\n    addCircleMarkers(lng = ~Longitude, \n                     lat = ~Latitude, \n                     radius = ~rad, \n                     popup = ~text,  # Pop-ups understand HTML\n                     weight = 0.7,\n                     stroke = TRUE, \n                     color = \"#000000\",\n                     fillColor = \"#79B4B7\", \n                     fillOpacity = 0.3)\n\n# Display the map\nplt\n```\n:::\n\n\n\n<iframe src=\"../posts/covid_visualisation_using_leaflet/map1.html\" height=\"600\" width=\"100%\"></iframe>\n\nOne of the great features of leaflet is that visualizations are interactive. Try clicking on one of the bubbles to see details about that country's COVID-19 statistics. The popup information is pre-generated HTML:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example of the popup HTML content\nhead(df$text)\n```\n:::\n\n\n\n## Tracking Confirmed Cases Over Time\n\nNow let's create a more advanced visualization that shows how COVID-19 cases evolved over time. Leaflet allows us to add multiple layers to the same map and provides UI elements (like radio buttons) to switch between them using the `group` argument and the `addLayersControl()` function:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a date sequence (every 21 days)\nvec <- seq.Date(as.Date(\"2020-03-01\"), to = as.Date(\"2021-09-01\"), by = \"21 days\")\nvec <- as.character(vec)\n\nplt <- df %>% \n    # Track the top 50 countries for each date\n    group_by(date) %>% \n    arrange(desc(confirmed)) %>% \n    filter(row_number() <= 50, \n           date %in% vec) %>% \n    \n    # Circle radius - scaled for visual effect\n    mutate(rad = sqrt(confirmed/max(confirmed)) * 80) %>% \n    \n    # Create leaflet map\n    leaflet(options = leafletOptions(minZoom = 2, maxZoom = 6)) %>% \n    \n    # Base map layer\n    addProviderTiles(providers$Stamen.TonerLite,\n                     options = providerTileOptions(opacity = 0.8)) %>%\n    \n    # Add circle markers with date grouping\n    addCircleMarkers(lng = ~Longitude, \n                     lat = ~Latitude, \n                     radius = ~rad, \n                     popup = ~text,\n                     weight = 0.7,\n                     stroke = TRUE, \n                     color = \"#000000\",\n                     fillColor = \"#525c63\", \n                     fillOpacity = 0.5, \n                     group = ~date, \n                     labelOptions = labelOptions(noHide = FALSE)) %>% \n    \n    # Add layer control (radio buttons for date selection)\n    addLayersControl(\n        baseGroups = vec,\n        options = layersControlOptions(collapsed = FALSE))\n\n# Display the map\nplt\n```\n:::\n\n\n\n<iframe src=\"../posts/covid_visualisation_using_leaflet/map2.html\" height=\"600\" width=\"100%\"></iframe>\n\nUse the radio buttons at the top-right of the map to switch between different dates and observe how the pandemic evolved over time. It's interesting to note:\n\n- Which countries were affected by COVID-19 in early 2020\n- How the virus rapidly spread across Europe\n- The impact of lockdowns on the number of confirmed cases\n- India's second wave in mid-2021\n- The increasing number of cases in Southeast Asia later in the timeline\n\n## Customization Options\n\nLeaflet offers numerous customization options:\n\n### Base Maps\n\nYou can choose from various base map styles:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Some popular base map options\nleaflet() %>%\n  # OpenStreetMap (default)\n  addTiles(group = \"OpenStreetMap\") %>%\n  \n  # Carto tiles\n  addProviderTiles(providers$CartoDB.Positron, group = \"Carto Light\") %>%\n  addProviderTiles(providers$CartoDB.DarkMatter, group = \"Carto Dark\") %>%\n  \n  # Stamen tiles\n  addProviderTiles(providers$Stamen.Toner, group = \"Stamen Toner\") %>%\n  addProviderTiles(providers$Stamen.Watercolor, group = \"Stamen Watercolor\") %>%\n  \n  # Add layer control\n  addLayersControl(\n    baseGroups = c(\"OpenStreetMap\", \"Carto Light\", \"Carto Dark\", \n                   \"Stamen Toner\", \"Stamen Watercolor\"),\n    options = layersControlOptions(collapsed = FALSE)\n  )\n```\n:::\n\n\n\n### Marker Customization\n\nYou can customize markers with different colors, sizes, and styles:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Color markers based on a variable\nleaflet(df) %>%\n  addTiles() %>%\n  addCircleMarkers(\n    lng = ~Longitude,\n    lat = ~Latitude,\n    radius = ~sqrt(confirmed/1000000) * 10,  # Size based on confirmed cases\n    color = ~colorQuantile(\"YlOrRd\", confirmed)(confirmed),  # Color based on confirmed cases\n    stroke = FALSE,\n    fillOpacity = 0.7,\n    popup = ~text\n  )\n```\n:::\n\n\n\n## Conclusion\n\nLeaflet is a powerful tool for creating interactive geospatial visualizations in R. It's particularly useful for data with a spatial component, such as the COVID-19 dataset used in this example. The interactive nature of the visualizations allows users to explore the data in depth, revealing patterns that might not be apparent in static visualizations.\n\nKey advantages of using Leaflet include:\n\n1. **Interactivity**: Users can zoom, pan, and click on elements to reveal more information.\n2. **Layering**: Multiple data layers can be added to the same map.\n3. **Customization**: Extensive options for markers, popups, and base maps.\n4. **Integration**: Seamless integration with R and the tidyverse ecosystem.\n\nFor more information on using Leaflet in R, check out the [official documentation](https://rstudio.github.io/leaflet/).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}